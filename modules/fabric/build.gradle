plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

configurations {
    shade
    implementation.extendsFrom shade
}

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        url "https://repo.trinarywolf.net/spigot/"
    }
}

loom {
    splitEnvironmentSourceSets()

    mods {
        "modid" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

}

dependencies {
    compileOnly("org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT")
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    shade(project(":common"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    archiveClassifier = 'slim'
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}" }
    }
}

shadowJar {
    archiveClassifier = 'Runtime'
    archiveBaseName.set("EventTransactionLib-Fabric")
    configurations = [project.configurations.shade]
    dependsOn remapJar
    from zipTree(remapJar.archiveFile)
}


publishing {
    repositories {
        maven {
            name = "Reposilite"
            url("https://repo.trinarywolf.net/releases")
            credentials {
                username(rootProject.properties['reposilite.user'] as String)
                password(rootProject.properties['reposilite.token'] as String)
            }
        }
    }
    publications {
        "$project.name"(MavenPublication) {
            groupId "live.luya"
            artifactId "eventtransactionlib-fabric"
            version rootProject.properties['version'] as String
            from components.java
        }
    }
}